#!/bin/bash
app=ezpublish

# Retrieve arguments
domain=$1
path=$2
admin=$3
is_public=$4

# Check if admin exists
sudo yunohost user list --json | grep -q "\"username\": \"$admin\""
if [[ ! $? -eq 0 ]]; then
    echo "Wrong admin"
    exit 1
fi

#Â Save app settings
sudo yunohost app setting $app admin -v "$admin"
sudo yunohost app setting $app is_public -v "$is_public"

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Install PHP dependency
sudo apt-get update
sudo apt-get install -y php5-cli
sudo apt-get install -y php5-xsl

# Generate random password
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{24\}\).*/\1/p')

# Use 'ezpublish' as database name and user
db_user=ezpublish

# Initialize database and store mysql password for upgrade
sed -i "s@YNH_DB_NAME@$db_user@g" ../conf/create.sql
sudo yunohost app initdb $db_user -p $db_pwd -s ../conf/create.sql
sudo yunohost app setting $app mysqlpwd -v $db_pwd

# Create user
sudo useradd -d /var/www/$app $app

# Copy source files
final_path=/var/www/$app
sudo mkdir -p $final_path
sudo cp -a ../sources/* $final_path

# Update dependencies
(cd $final_path && sudo php -r "readfile('https://getcomposer.org/installer');" | sudo php)
(cd $final_path && sudo php $final_path/composer.phar install --no-dev --prefer-dist --optimize-autoloader -n)

# Set permissions to movim directory
(cd $final_path; sudo chown -R www-data:www-data ezpublish/{cache,logs,config,sessions} ezpublish_legacy/{design,extension,settings,var} web;
 sudo find {ezpublish/{cache,logs,config,sessions},ezpublish_legacy/{design,extension,settings,var},web} -type d | sudo xargs chmod -R 775;
 sudo find {ezpublish/{cache,logs,config,sessions},ezpublish_legacy/{design,extension,settings,var},web} -type f | sudo xargs chmod -R 664)

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@YNH_WWW_PATH@$path@g" ../conf/nginx.conf*
sed -i "s@YNH_WWW_ALIAS@$final_path@g" ../conf/nginx.conf*
sed -i "s@YNH_WWW_DOMAIN@$domain@g" ../conf/nginx.conf*
sed -i "s@NAMETOCHANGE@$app@g" ../conf/nginx.conf*
sed -i "s@NAMETOCHANGE@$app@g" ../conf/php-fpm.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
sudo cp ../conf/php-fpm.conf /etc/php5/fpm/pool.d/$app.conf
sudo chown root: /etc/php5/fpm/pool.d/$app.conf
sudo chmod 644 /etc/php5/fpm/pool.d/$app.conf

# Setup configuration
sed -i "s@YNH_DB_NAME@$db_user@g" ../conf/kickstart.ini
sed -i "s@YNH_DB_PASSWORD@$db_pwd@g" ../conf/kickstart.ini
sudo cp ../conf/kickstart.ini ${final_path%/}/ezpublish_legacy/kickstart.ini

# Restart services
sudo service php5-fpm restart
sudo service nginx reload
sudo yunohost app ssowatconf



sudo yunohost app setting $app skipped_uris -v "/"

(cd $final_path; sudo sudo -u www-data php ezpublish/console assets:install --env=prod --relative --symlink web)
(cd $final_path; sudo sudo -u www-data php ezpublish/console ezpublish:legacy:assets_install --relative --symlink web)
(cd $final_path; sudo sudo -u www-data php ezpublish/console assetic:dump --env=prod web)

sudo yunohost app ssowatconf


if [ "$is_public" = "No" ];
then
    sudo yunohost app setting $app skipped_uris -d
    sudo yunohost app ssowatconf
else
    sudo cp ../conf/nginx.conf-public /etc/nginx/conf.d/$domain.d/$app.conf
    sudo service nginx reload
fi
